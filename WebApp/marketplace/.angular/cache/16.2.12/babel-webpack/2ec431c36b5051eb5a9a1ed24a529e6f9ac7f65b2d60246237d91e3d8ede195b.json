{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/David Bonilla/Desktop/rosen-group assessment/marketplace-master/WebApp/marketplace/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services/offer.service\";\nimport * as i2 from \"src/app/core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction OfferCreationComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", item_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r1.name);\n  }\n}\nexport class OfferCreationComponent {\n  constructor(offerService, auth, router) {\n    this.offerService = offerService;\n    this.auth = auth;\n    this.router = router;\n    this.offerForm = new FormGroup({\n      categoryId: new FormControl(null, [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      location: new FormControl('', [Validators.required]),\n      pictureUrl: new FormControl('', [Validators.required]),\n      title: new FormControl('', [Validators.required]),\n      userId: new FormControl(null, [Validators.required])\n    });\n  }\n  ngOnInit() {\n    this.auth.$user.subscribe(user => {\n      this.offerForm.controls.userId.setValue(user.id);\n    });\n    this.populateCategories();\n  }\n  ngOnDestroy() {\n    this.$user.unsubscribe();\n  }\n  offerSubmit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.offerForm.valid) {\n        const offerData = {\n          categoryId: _this.offerForm.controls.categoryId.value,\n          description: _this.offerForm.controls.description.value,\n          location: _this.offerForm.controls.location.value,\n          pictureUrl: _this.offerForm.controls.pictureUrl.value,\n          title: _this.offerForm.controls.title.value,\n          userId: _this.offerForm.controls.userId.value\n        };\n        try {\n          const result = yield _this.offerService.postOffer(offerData).toPromise();\n          if (result) {\n            alert(\"Offer posted successfully\");\n            _this.router.navigate([\"/list\"]);\n          } else {\n            alert(\"An error occured while creating the user\");\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      } else {\n        alert(\"You must enter a valid post offer\");\n      }\n    })();\n  }\n  populateCategories() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.categories = yield _this2.offerService.getCategories();\n    })();\n  }\n  static #_ = this.ɵfac = function OfferCreationComponent_Factory(t) {\n    return new (t || OfferCreationComponent)(i0.ɵɵdirectiveInject(i1.OfferService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OfferCreationComponent,\n    selectors: [[\"app-offer-creation\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 26,\n    vars: 2,\n    consts: [[1, \"offer-form\", 3, \"formGroup\", \"submit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"id\", \"title\", \"formControlName\", \"title\", \"placeholder\", \"Title\"], [\"for\", \"pictureUrl\"], [\"id\", \"pictureUrl\", \"formControlName\", \"pictureUrl\", \"placeholder\", \"iphone.jpg\"], [\"for\", \"description\"], [\"id\", \"description\", \"formControlName\", \"description\", \"placeholder\", \"Description\", \"rows\", \"5\"], [\"for\", \"location\"], [\"id\", \"location\", \"formControlName\", \"location\", \"placeholder\", \"Country, city, neighborhood, the office, my desk, etc...\"], [\"for\", \"category\"], [\"id\", \"category\", \"formControlName\", \"categoryId\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"primary-btn\", \"offer-submit-button\"], [3, \"value\"]],\n    template: function OfferCreationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"submit\", function OfferCreationComponent_Template_form_submit_0_listener() {\n          return ctx.offerSubmit();\n        });\n        i0.ɵɵelementStart(1, \"h3\");\n        i0.ɵɵtext(2, \"Post new Offer\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 2);\n        i0.ɵɵtext(5, \"Title*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Picture URL*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 1)(12, \"label\", 6);\n        i0.ɵɵtext(13, \"Description*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"textarea\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 1)(16, \"label\", 8);\n        i0.ɵɵtext(17, \"Location*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 1)(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Category*\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 11);\n        i0.ɵɵtemplate(23, OfferCreationComponent_option_23_Template, 2, 2, \"option\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 13);\n        i0.ɵɵtext(25, \"Create\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.offerForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n      }\n    },\n    dependencies: [CommonModule, i4.NgForOf, ReactiveFormsModule, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","FormControl","FormGroup","ReactiveFormsModule","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","item_r1","id","ɵɵadvance","ɵɵtextInterpolate","name","OfferCreationComponent","constructor","offerService","auth","router","offerForm","categoryId","required","description","location","pictureUrl","title","userId","ngOnInit","$user","subscribe","user","controls","setValue","populateCategories","ngOnDestroy","unsubscribe","offerSubmit","_this","_asyncToGenerator","valid","offerData","value","result","postOffer","toPromise","alert","navigate","e","console","log","_this2","categories","getCategories","_","ɵɵdirectiveInject","i1","OfferService","i2","AuthService","i3","Router","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","OfferCreationComponent_Template","rf","ctx","ɵɵlistener","OfferCreationComponent_Template_form_submit_0_listener","ɵɵelement","ɵɵtemplate","OfferCreationComponent_option_23_Template","i4","NgForOf","i5","ɵNgNoValidate","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\David Bonilla\\Desktop\\rosen-group assessment\\marketplace-master\\WebApp\\marketplace\\src\\app\\offers\\offer-creation\\offer-creation.component.ts","C:\\Users\\David Bonilla\\Desktop\\rosen-group assessment\\marketplace-master\\WebApp\\marketplace\\src\\app\\offers\\offer-creation\\offer-creation.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport {Component, Input, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, UntypedFormGroup, Validators} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { Category } from 'src/app/core/models/category.model';\nimport { PostOfferDTO } from 'src/app/core/models/offer.model';\nimport { User } from 'src/app/core/models/user.model';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { OfferService } from 'src/app/core/services/offer.service';\n\n@Component({\n  selector: 'app-offer-creation',\n  templateUrl: './offer-creation.component.html',\n  styleUrls: ['./offer-creation.component.scss'],\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n})\nexport class OfferCreationComponent implements OnInit {\n\n  offerForm = new FormGroup({\n    categoryId: new FormControl(null, [Validators.required]),\n    description: new FormControl('', [Validators.required]),\n    location: new FormControl('', [Validators.required]),\n    pictureUrl: new FormControl('', [Validators.required]),\n    title: new FormControl('', [Validators.required]),\n    userId: new FormControl(null, [Validators.required]),\n  });\n\n  categories: Category[];\n  $user: Subscription;\n  constructor(private offerService: OfferService, private auth:AuthService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.auth.$user.subscribe((user:User) => {\n      this.offerForm.controls.userId.setValue(user.id);\n    })\n    this.populateCategories();\n  }\n\n  ngOnDestroy(): void{\n    this.$user.unsubscribe();\n  }\n\n  async offerSubmit(){\n    if(this.offerForm.valid){\n      const offerData: PostOfferDTO = {\n        categoryId: this.offerForm.controls.categoryId.value,\n        description: this.offerForm.controls.description.value,\n        location: this.offerForm.controls.location.value,\n        pictureUrl: this.offerForm.controls.pictureUrl.value,\n        title: this.offerForm.controls.title.value,\n        userId: this.offerForm.controls.userId.value,\n      }\n\n      try{\n        const result = await this.offerService.postOffer(offerData).toPromise()\n        if(result){\n          alert(\"Offer posted successfully\");\n          this.router.navigate([\"/list\"]);\n        } else {\n          alert(\"An error occured while creating the user\")\n        }\n      } catch(e){\n        console.log(e);\n      }\n    } else {\n      alert(\"You must enter a valid post offer\")\n    }\n  }\n\n  async populateCategories(){\n    this.categories = await this.offerService.getCategories();\n  }\n}\n","<form class=\"offer-form\" [formGroup]=\"offerForm\" (submit)=\"offerSubmit()\">\n  <h3>Post new Offer</h3>\n  <div class=\"form-group\">\n    <label for=\"title\">Title*</label>\n    <input id=\"title\" formControlName=\"title\" placeholder=\"Title\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"pictureUrl\">Picture URL*</label>\n    <input id=\"pictureUrl\" formControlName=\"pictureUrl\" placeholder=\"iphone.jpg\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Description*</label>\n    <textarea id=\"description\" formControlName=\"description\" placeholder=\"Description\" rows=\"5\"></textarea>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"location\">Location*</label>\n    <input id=\"location\" formControlName=\"location\" placeholder=\"Country, city, neighborhood, the office, my desk, etc...\"/>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"category\">Category*</label>\n    <select id=\"category\" formControlName=\"categoryId\">\n      <option [value]=\"item.id\" *ngFor=\"let item of categories\">{{item.name}}</option>\n    </select>\n  </div>\n  <button type=\"submit\" class=\"btn primary-btn offer-submit-button\">Create</button>\n</form>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}