{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this._user = new BehaviorSubject(null);\n    this.$user = this._user.asObservable();\n    const username = localStorage.getItem(\"username\");\n    if (username) {\n      this.getUser(localStorage.getItem(\"username\")).toPromise().then(res => {\n        this._user.next(res);\n      });\n    }\n  }\n  getUser(username) {\n    return this.http.get(`${environment.apiUrl}User/GetUserByUserName`, {\n      params: {\n        username\n      }\n    });\n  }\n  logIn(username) {\n    localStorage.setItem(\"username\", username);\n  }\n  signOut() {\n    localStorage.removeItem(\"username\");\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","environment","AuthService","constructor","http","_user","$user","asObservable","username","localStorage","getItem","getUser","toPromise","then","res","next","get","apiUrl","params","logIn","setItem","signOut","removeItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\David Bonilla\\Desktop\\rosen-group assessment\\marketplace-master\\WebApp\\marketplace\\src\\app\\core\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _user = new BehaviorSubject<User | null>(null);\n  public $user = this._user.asObservable();\n  \n  constructor(private http: HttpClient) { \n    const username = localStorage.getItem(\"username\");\n    if(username){\n      this.getUser(localStorage.getItem(\"username\")).toPromise().then((res: User) => {\n        this._user.next(res)\n      });\n    }\n  }\n\n  getUser(username){\n    return this.http.get(`${environment.apiUrl}User/GetUserByUserName`, { params: { username } })\n  }\n\n  logIn(username){\n    localStorage.setItem(\"username\", username)\n  }\n\n  signOut(){\n    localStorage.removeItem(\"username\");\n  }\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAqB,MAAM;AACnD,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,KAAK,GAAG,IAAIL,eAAe,CAAc,IAAI,CAAC;IAC/C,KAAAM,KAAK,GAAG,IAAI,CAACD,KAAK,CAACE,YAAY,EAAE;IAGtC,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAGF,QAAQ,EAAC;MACV,IAAI,CAACG,OAAO,CAACF,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,CAACE,SAAS,EAAE,CAACC,IAAI,CAAEC,GAAS,IAAI;QAC5E,IAAI,CAACT,KAAK,CAACU,IAAI,CAACD,GAAG,CAAC;MACtB,CAAC,CAAC;;EAEN;EAEAH,OAAOA,CAACH,QAAQ;IACd,OAAO,IAAI,CAACJ,IAAI,CAACY,GAAG,CAAC,GAAGf,WAAW,CAACgB,MAAM,wBAAwB,EAAE;MAAEC,MAAM,EAAE;QAAEV;MAAQ;IAAE,CAAE,CAAC;EAC/F;EAEAW,KAAKA,CAACX,QAAQ;IACZC,YAAY,CAACW,OAAO,CAAC,UAAU,EAAEZ,QAAQ,CAAC;EAC5C;EAEAa,OAAOA,CAAA;IACLZ,YAAY,CAACa,UAAU,CAAC,UAAU,CAAC;EACrC;EAAC,QAAAC,CAAA,G;qBAvBUrB,WAAW,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX1B,WAAW;IAAA2B,OAAA,EAAX3B,WAAW,CAAA4B,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}