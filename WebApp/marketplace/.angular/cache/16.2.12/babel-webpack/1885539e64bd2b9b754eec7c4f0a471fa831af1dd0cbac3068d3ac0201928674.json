{"ast":null,"code":"import { of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class MarketplaceApiService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.marketplaceApUrl = environment.apiUrl;\n  }\n  getOffers(page, pageSize) {\n    // TODO: implement the logic to retrieve paginated offers from the service\n    return of([]);\n  }\n  postOffer(offer) {\n    return this.http.post(`${this.marketplaceApUrl}Offer`, {\n      ...offer\n    });\n  }\n  getCategories() {\n    return this.http.get(`${this.marketplaceApUrl}Category`).toPromise();\n  }\n  static #_ = this.ɵfac = function MarketplaceApiService_Factory(t) {\n    return new (t || MarketplaceApiService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MarketplaceApiService,\n    factory: MarketplaceApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","environment","MarketplaceApiService","constructor","http","router","marketplaceApUrl","apiUrl","getOffers","page","pageSize","postOffer","offer","post","getCategories","get","toPromise","_","i0","ɵɵinject","i1","HttpClient","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\David Bonilla\\Desktop\\rosen-group assessment\\marketplace-master\\WebApp\\marketplace\\src\\app\\core\\marketplace-api\\marketplace-api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject, Subject, of } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Router } from '@angular/router';\nimport { PostOfferDTO } from '../models/offer.model';\nimport { Category } from '../models/category.model';\nimport { OfferModel } from './models/offer.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketplaceApiService {\n  private readonly marketplaceApUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient, private router: Router) { \n  }\n\n  getOffers(page: number, pageSize: number): Observable<OfferModel[]> {\n    // TODO: implement the logic to retrieve paginated offers from the service\n    return of([]);\n  }\n\n  postOffer(offer: PostOfferDTO): Observable<any>{\n    return this.http.post(`${this.marketplaceApUrl}Offer`, {...offer})\n  }  \n\n  getCategories(): Promise<Category[]>{\n    return this.http.get<Category[]>(`${this.marketplaceApUrl}Category`).toPromise()\n  } \n}\n"],"mappings":"AAEA,SAA6CA,EAAE,QAAQ,MAAM;AAC7D,SAASC,WAAW,QAAQ,8BAA8B;;;;AAS1D,OAAM,MAAOC,qBAAqB;EAGhCC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAFnC,KAAAC,gBAAgB,GAAGL,WAAW,CAACM,MAAM;EAGtD;EAEAC,SAASA,CAACC,IAAY,EAAEC,QAAgB;IACtC;IACA,OAAOV,EAAE,CAAC,EAAE,CAAC;EACf;EAEAW,SAASA,CAACC,KAAmB;IAC3B,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,GAAG,IAAI,CAACP,gBAAgB,OAAO,EAAE;MAAC,GAAGM;IAAK,CAAC,CAAC;EACpE;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACV,IAAI,CAACW,GAAG,CAAa,GAAG,IAAI,CAACT,gBAAgB,UAAU,CAAC,CAACU,SAAS,EAAE;EAClF;EAAC,QAAAC,CAAA,G;qBAjBUf,qBAAqB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAArBtB,qBAAqB;IAAAuB,OAAA,EAArBvB,qBAAqB,CAAAwB,IAAA;IAAAC,UAAA,EAFpB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}